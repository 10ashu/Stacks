class Solution {
public:
   void buildans(string &ans,stack<string> st)
   {
       if(st.empty())
       return ;
       string temp=st.top();
       st.pop();
       buildans(ans,st);
       ans=ans+temp;
   }
    string simplifyPath(string path) {
        int i=0;
        stack<string> st;
        while(i<path.size())
        {
            int start=i;
            int end=i+1;
            while(end<path.size()&&path[end]!='/')
            {
                end++;
            }
            i=end;
            string minpath=path.substr(start,end-start);
            if(minpath=="/"||minpath=="/.")
            continue;
            if(minpath!="/..")
            {
                st.push(minpath);
            }
            else if(!st.empty())
            {
                st.pop();
            }
        }
        if(st.empty())
        return "/";
        string ans="";
        buildans(ans,st);
        return ans;
    }
};
