class Solution {
public:
    vector<int> nextsmaller(vector<int>& arr)
    {
         vector<int> ans(arr.size());
         stack<int> st;
         st.push(-1);
         for(int i=arr.size()-1;i>=0;i--)
         {
              while(st.top()!=-1&&arr[i]<=arr[st.top()])
              {
                  st.pop();
              }
              ans[i]=st.top();
              st.push(i);
         }
         return ans;
    }
    vector<int> presmaller(vector<int>& arr)
    {
         vector<int> ans(arr.size());
         stack<int> st;
         st.push(-1);
         for(int i=0;i<arr.size();i++)
         {
              while(st.top()!=-1&&arr[i]<=arr[st.top()])
              {
                  st.pop();
              }
              ans[i]=st.top();
              st.push(i);
         }
         return ans;
    }
    int largearea(vector<int>& height)
    {
        vector<int> pre=presmaller(height);
        vector<int> next=nextsmaller(height);
        int area=INT_MIN;
        for(int i=0;i<height.size();i++)
        {
              int length=height[i];
            if(next[i]==-1)
            {
               next[i]=height.size();   
            }
            int width=next[i]-pre[i]-1;
            int a=length*width;
            area=max(area,a);
        }
        return area;
    }
    int maximalRectangle(vector<vector<char>>& matrix) {
        int n=matrix.size();
        int m=matrix[0].size();
        vector<int> ans(m,0);
        int maxi=INT_MIN;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(matrix[i][j]=='1')
                {
                   ans[j]++;
                }
                else
                {
                    ans[j]=0;
                }
            }
            maxi=max(maxi,largearea(ans));
        }
        return maxi;
    }
};
